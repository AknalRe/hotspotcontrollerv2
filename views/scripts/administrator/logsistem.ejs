<script src="/socket.io/socket.io.js"></script>
<script>
    const mikrotikstatus = '<%= mikrotik %>';
    // console.log("Mikrotik :",mikrotikstatus);
    function bytesToMegabytes(bytes) {
        const megabytes = bytes / (1024 * 1024);
        return megabytes;
    }

    const socket = io();
    if (mikrotikstatus) {
        toastToast(true, "", "Memproses mengambil info router")
        socket.on('resource', function (data) {
            // console.log(data.data[0]);
            const resource = data.data[0];
            document.getElementById("info-mikrotik-cpu").innerHTML = resource["cpu-load"] + "%";
            document.getElementById("info-mikrotik-memory").innerHTML = bytesToMegabytes(resource["free-memory"]).toFixed(0) + "MB";
        })

        socket.on('userhotspot', function (data) {
            const hotspot = data.data;
            // console.log(hotspot);
            document.getElementById("info-mikrotik-user-hotspot-aktif").innerHTML = hotspot.length;
        })
    }
</script>
<script>
    function loghotspot() {
        return fetch('/loghotspot', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
            .then(response => response.json())
            .then(data => {
                // console.log(data.data.length);
                if (data.success) {
                    const hotspotDataLength = data.data.filter(item => !item.topics.includes('hotspot')).length;
                    document.getElementById("header-info-loghotspot-h5").innerHTML = `Log Hotspot ( ` + hotspotDataLength + ` )`;
                    displayDataloghotspot(data.data);
                }
                return data;
            })
            .catch(error => {
                console.log('Error:', error);
                throw error;
            });
    }

    loghotspot()
        .then((result) => {
            toastToast(result.success, '', result.message);
        })
        .catch((error) => {
            console.error('Terjadi kesalahan:', error);
        });

    function displayDataloghotspot(data) {
        // console.log(data);
        const tbody = document.querySelector('.custom-table-body-loghotspot');
        tbody.innerHTML = '';
        let count = 0;
        data.forEach(function (item) {
            if (!item.topics.includes('hotspot')) {
                dataqueue = true;
                count++;
                var row = document.createElement('tr');

                var countCell = document.createElement('td');
                countCell.textContent = count + ".";
                countCell.style.width = '30px';

                var timeCell = document.createElement('td');
                timeCell.textContent = item.time;

                var messageCell = document.createElement('td');
                if (item.message.includes('logged in')) {
                    messageCell.style.color = 'green';
                    // row.style.background = 'white';
                    // row.style.color = 'black';
                } else if (item.message.includes('logged out') || item.message.includes('failed: invalid')) {
                    messageCell.style.color = 'red';
                    // row.style.background = 'white';
                    // row.style.color = 'black';
                }
                messageCell.textContent = item.message;

                row.appendChild(countCell);
                row.appendChild(timeCell);
                row.appendChild(messageCell);

                tbody.appendChild(row);
            }
        })
    }
</script>