<script src="/socket.io/socket.io.js"></script>
<script>
    const mikrotikstatus = '<%= mikrotik %>';
    // console.log("Mikrotik :",mikrotikstatus);
    function bytesToMegabytes(bytes) {
        const megabytes = bytes / (1024 * 1024);
        return megabytes;
    }

    const socket = io();
    if (mikrotikstatus) {
        toastToast(true, "", "Memproses mengambil info router")
        socket.on('resource', function (data) {
            // console.log(data.data[0]);
            const resource = data.data[0];
            document.getElementById("info-mikrotik-cpu").innerHTML = resource["cpu-load"] + "%";
            document.getElementById("info-mikrotik-memory").innerHTML = bytesToMegabytes(resource["free-memory"]).toFixed(0) + "MB";
        })

        socket.on('userhotspot', function (data) {
            const hotspot = data.data;
            // console.log(hotspot);
            document.getElementById("info-mikrotik-user-hotspot-aktif").innerHTML = hotspot.length;
        })
    }

</script>
<script>
    let dataklien;
    updatelistklien();

    function updatelistklien() {
        toastToast(true, "", "Memproses ambil data nomor klien");
        fetch('/listklienbroadcast', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            }
        })
            .then(response => response.json())
            .then(data => {
                // Hapus semua opsi saat ini
                // console.log(data)
                toastToast(data.success, "", data.message);
                if (data.success) {
                    dataklien = data.data;
                    // console.log(dataklien);
                    const selectElement = document.getElementById('tujuan');
                    selectElement.innerHTML = "";

                    const semuaOption = document.createElement('option');
                    semuaOption.textContent = "Semua";
                    semuaOption.value = "semua";
                    selectElement.appendChild(semuaOption);

                    const tamuOption = document.createElement('option');
                    tamuOption.textContent = "Tamu";
                    tamuOption.value = "tamu";
                    selectElement.appendChild(tamuOption);

                    const karyawanOption = document.createElement('option');
                    karyawanOption.textContent = "Karyawan";
                    karyawanOption.value = "karyawan";
                    selectElement.appendChild(karyawanOption);

                    data.data.forEach(option => {
                        const optionElement = document.createElement('option');
                        optionElement.textContent = option.comment ? `${option.name} - ${option.comment} - ${option.profile.toLowerCase().includes('tamu') ? 'Tamu' : 'Karyawan'}` : `${option.name} - ${option.profile.toLowerCase().includes('tamu') ? 'Tamu' : 'Karyawan'}`;
                        optionElement.value = option.name;
                        selectElement.appendChild(optionElement);
                    });
                }
            })
            .catch(error => {
                toastToast(true, "", `Gagal Mendapatkan data jenis akun, Error: ${error}`);
                console.log('Error:', error);
            });
    }

    document.addEventListener('DOMContentLoaded', function () {
        const broadcastForm = document.getElementById('broadcastForm');
        const submitButton = document.getElementById('submitButton');
        const loadingSpinner = document.getElementById('loadingSpinner');

        broadcastForm.addEventListener('submit', function (event) {
            event.preventDefault();

            // Menampilkan animasi loading
            submitButton.disabled = true;
            loadingSpinner.style.display = 'inline-block';

            let message;
            let tujuan = document.getElementById('tujuan').value;
            const pesan = document.getElementById('pesan').value;
            let gambar = document.getElementById('gambar').value;

            if (pesan == null || pesan == "") {
                alert('Harap isi kolom pesan');
                toastToast(false, "", `Batal mengirimkan broadcast karena pesan kosong`);
                // Menyembunyikan animasi loading
                submitButton.disabled = false;
                loadingSpinner.style.display = 'none';
                return;
            }

            if (tujuan == "semua") {
                tujuan = dataklien.map(klien => klien.name);
                message = "mengirimkan ke semua klien";
                alert('Anda melakukan broadcast ke semua klien');
            } else if (tujuan == 'tamu') {
                tujuan = dataklien.filter(klien => klien.profile.toLowerCase().includes('tamu')).map(klien => klien.name);
                message = "mengirimkan ke semua tamu";
                alert('Anda melakukan broadcast ke semua tamu');
            } else if (tujuan == 'karyawan') {
                tujuan = dataklien.filter(klien => !klien.profile.toLowerCase().includes('tamu')).map(klien => klien.name);
                message = "mengirimkan ke semua karyawan";
                alert('Anda melakukan broadcast ke semua karyawan');
            } else {
                message = `mengirimkan ke klien ${tujuan}`;
            }

            const formData = !gambar ? {
                tujuan: tujuan,
                pesan: pesan,
                message: message
            } : {
                tujuan: tujuan,
                pesan: pesan,
                message: message,
                gambar: gambar
            };

            fetch('/broadcast', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(formData)
            })
                .then(response => response.json())
                .then(data => {
                    console.log(data);
                    toastToast(data.success, "", data.message);
                    // Menyembunyikan animasi loading
                    submitButton.disabled = false;
                    loadingSpinner.style.display = 'none';

                    // Menampilkan hasil broadcast dalam tabel
                    const resultDiv = document.getElementById('result-broadcast');
                    resultDiv.style.display = 'block';

                    // Tambahkan tombol clear result
                    const clearButton = document.createElement('button');
                    clearButton.classList = 'btn', 'btn-danger';
                    clearButton.textContent = 'Hapus Hasil';
                    clearButton.addEventListener('click', () => {
                        resultDiv.innerHTML = '';
                    });
                    resultDiv.appendChild(clearButton);

                    const table = document.createElement('table');
                    table.innerHTML = `
                        <thead class="table-list">
                            <tr>
                                <th>Status</th>
                                <th>Tujuan</th>
                                <th>Message</th>
                            </tr>
                        </thead>
                        <tbody>
                            ${data.result.map(result => `
                                <tr>
                                    <td>${result.msg.success ? 'Success' : 'Failed'}</td>
                                    <td>${result.tujuan}</td>
                                    <td>${result.msg.message}</td>
                                </tr>
                            `).join('')}
                        </tbody>
                    `;
                    resultDiv.appendChild(table);

                    // Hapus isi dalam div setelah 5 menit
                    setTimeout(() => {
                        resultDiv.innerHTML = '';
                        resultDiv.style.display = 'none';
                    }, 5 * 60 * 1000);
                })
                .catch(error => {
                    console.error('Error:', error);
                    toastToast(true, "", `Gagal melakukan broadcast, Error: ${error}`);
                    // Menyembunyikan animasi loading
                    submitButton.disabled = false;
                    loadingSpinner.style.display = 'none';
                });
        })
    })
</script>